---
# tasks file
# https://docs.openstack.org/install-guide/openstack-services.html
# https://docs.openstack.org/neutron/train/install/controller-install-rdo.html
# https://docs.openstack.org/train/install/

  - include_vars: "{{ playbook_dir }}/config.yml"
  - include_vars: "{{ playbook_dir }}/passwords.yml"
  - include_vars: "main.yml"

  - name: Create database and user
    shell: |
      mysql -u root -p{{ ROOT_DBPASS }} -e "DROP DATABASE neutron;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "CREATE DATABASE neutron;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY '{{ NEUTRON_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY '{{ NEUTRON_DBPASS }}';"

  - name: Create user
    shell: |
      source /root/admin-openrc
      openstack user create --domain default --password {{ NEUTRON_PASS }} neutron     
    
  - name: Add the admin role to the neutron user
    shell: |
      source /root/admin-openrc
      openstack role add --project service --user neutron admin
  
  - name: Create the neutron service entity
    shell: |
      source /root/admin-openrc
      openstack service create --name neutron --description "OpenStack Networking" network
      openstack endpoint create --region RegionOne network public http://{{ openstack.controller.name }}:9696
      openstack endpoint create --region RegionOne network internal http://{{ openstack.controller.name }}:9696
      openstack endpoint create --region RegionOne network admin http://{{ openstack.controller.name }}:9696         
       

  - name: Installing the packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
        - openstack-neutron
        - openstack-neutron-ml2
        - openstack-neutron-linuxbridge
        - ebtables
        - ipset
  
  - name: Edit the /etc/neutron/neutron.conf file 
    template:
      src: neutron.conf.j2
      dest: /etc/neutron/neutron.conf
      owner: root 
      group: neutron
      mode: '0640'

  - name: Edit the /etc/neutron/plugins/ml2/ml2_conf.ini
    template:
      src: ml2_conf.j2
      dest: /etc/neutron/plugins/ml2/ml2_conf.ini
      owner: root 
      group: neutron
      mode: '0640'
  
  - name: Edit the /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    template:
      src: linuxbridge_agent.ini.j2
      dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
      owner: root 
      group: neutron
      mode: '0640'  

  - name: Edit the /etc/neutron/l3_agent.ini
    template:
      src: l3_agent.ini.j2
      dest: /etc/neutron/l3_agent.ini
      owner: root 
      group: neutron
      mode: '0640'        

  - name: Edit the /etc/neutron/dhcp_agent.ini
    template:
      src: dhcp_agent.ini.j2   
      dest: /etc/neutron/dhcp_agent.ini
      owner: root 
      group: neutron
      mode: '0640'    


  - name: Configure the metadata agent
    template:
      src: metadata_agent.ini.j2   
      dest: /etc/neutron/metadata_agent.ini
      owner: root 
      group: neutron
      mode: '0640'   


  - name: Edit the /etc/nova/nova.conf
    template:
      src:  nova.conf.j2
      dest: /etc/nova/nova.conf
      owner: root 
      group: nova
      mode: '0640'     
      
  - name: The Networking service initialization scripts expect a symbolic link /etc/neutron/plugin.ini pointing to the ML2 plug-in configuration file, /etc/neutron/plugins/ml2/ml2_conf.ini. If this symbolic link does not exist, create it using the following command
    shell: |
      rm /etc/neutron/plugin.ini 2>/dev/null
      ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
    args:
      warn: no
  
  - name: Populate the database
    shell: |
      su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
    args:
      warn: no
  

  - name: Restart the Compute API service
    systemd:
      name: openstack-nova-api.service
      state: restarted
  
  - name: Start the Networking services and configure them to start when the system boots
    systemd:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    with_items:
      - neutron-server.service
      - neutron-linuxbridge-agent.service
      - neutron-dhcp-agent.service
      - neutron-metadata-agent.service
      - neutron-l3-agent.service
    
      
      




    


